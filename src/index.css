@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;500;700;900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Alkatra:wght@400;500;600;700&display=swap');
@tailwind base;
@tailwind components;
@tailwind utilities;

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Alkatra', 'cursive';
  color: #1c1a1a;
  height: 100vh;
}

.dot-background {
  width: 100%;
  background-image: url('data:image/svg+xml;utf8,<svg width="10" height="10" xmlns="http://www.w3.org/2000/svg"><rect x="4" y="4" width="2" height="2" fill="%23E9E9E9" /></svg>');
  background-size: 8px 8px;
}
.dark {
  background-color: #1c1a1a;
  color: #fbfbff;
}

.toggle-checkbox:checked {
  @apply: right-0 border-green-400;
  right: 0;
  border-color: #e9ecef;
}
.toggle-checkbox:checked + .toggle-label {
  @apply: bg-green-400;
  background-color: #e9ecef;
}

.glass_button {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 10px 20px;
  border-radius: 50%;
  text-decoration: none;
  font-size: 15px;
  --transparency: 45%;
  background: color-mix(in srgb, white, transparent var(--transparency));
  backdrop-filter: blur(3px);
  color: black;
  font-weight: 600;
  box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.1);
  position: relative;
  text-align: center;
  --width: 70px;
  --height: 70px;
  --margin-top: 10px;
  width: var(--width);
  height: var(--height);
  margin-top: var(--margin-top);
  --x-space: calc(var(--height) + var(--margin-top));
  --start-x-position: calc(var(--index) * var(--x-space) * 1);
  top: calc(var(--start-x-position) - 80px);
  cursor: pointer;
}

.glass_button-resume {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 10px 20px;
  border-radius: 50%;
  text-decoration: none;
  font-size: 15px;
  --transparency: 45%;
  background: color-mix(in srgb, white, transparent var(--transparency));
  backdrop-filter: blur(3px);
  color: black;
  font-weight: 600;
  box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.1);
  position: relative;
  text-align: center;
  --width: 70px;
  --height: 70px;
  --margin-top: 10px;
  width: var(--width);
  height: var(--height);
  cursor: pointer;
}

.glass_button:hover {
  border: 1px solid black;
}

.glass-wrapper {
  position: relative;
}

.glass_button-text_open {
  color: black;
  font-weight: 600;
}

/* .glass_button-text_closed:not(:last-child) {
  color: transparent;
  font-weight: 600;
} */

.glass_button:nth-child(1) {
  --index: 0;
  transition: color 1000ms, background 1000ms, top 500ms;
}
.glass_button:nth-child(2) {
  --index: 1;
  transition: color 2000ms, background 1500ms, top 700ms;
}
.glass_button:nth-child(3) {
  --index: 2;
  transition: color 3000ms, background 2000ms, top 800ms;
}

.glass_button:nth-child(4) {
  --index: 3;
  transition: color 4000ms, background 2500ms, top 900ms;
}
.glass_button:nth-child(5) {
  --index: 4;
  transition: color 4000ms, background 3000ms, top 1000ms;
}
.glass_button:nth-child(6) {
  --index: 5;
  transition: color 4000ms, background 3000ms, top 1100ms;
}

@media (max-width: 420px) {
  .glass_button,
  .glass_button-resume {
    font-size: 12px;
    --width: 50px;
    --height: 50px;
  }
}

.tab-scroll::-webkit-scrollbar {
  width: 2px;
  height: 2px;
  background-color: #f1f1f1;
}

::-webkit-scrollbar-thumb {
  background-color: #888;
  border-radius: 6px;
}

::-webkit-scrollbar-thumb:hover {
  background-color: #555;
}

.transition-opacity {
  transition: opacity 0.9s ease; /* Adjust the duration and easing as needed */
}

.menu-burger {
  width: 20px;
  height: 3px;
  background: #fff;
  border-radius: 5px;
  transition: all 0.5s ease-in-out;
}

.menu-burger::before,
.menu-burger::after {
  content: '';
  position: absolute;
  width: 20px;
  height: 3px;
  background: #fff;
  border-radius: 5px;
  transition: all 0.5s ease-in-out;
}

.menu-burger::before {
  transform: translateY(-10px);
}

.menu-burger::after {
  transform: translateY(10px);
}

.menu-burger.open {
  transform: translateX(-50px);
  background-color: transparent;
}

.menu-burger.open.menu-burger::before {
  transform: rotate(45deg) translate(35px, -35px);
}

.menu-burger.open.menu-burger::after {
  transform: rotate(-45deg) translate(35px, 35px);
}
